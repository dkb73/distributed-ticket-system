# nginx/nginx.conf

# This top-level block is required by NGINX.
events {}

# This block defines our HTTP server and its behavior.
http {
  # Define "upstream" groups for our microservices. This allows NGINX to know
  # where to forward requests. The names 'write_api_service' and 'read_api_service'
  # can be anything, but the server address MUST match the service names in docker-compose.yml.
  upstream write_api_service {
    server write-api:3000;
  }

  upstream read_api_service {
    server read-api:3001;
  }

  # Define the main server that will act as our gateway.
  server {
    # The gateway will listen on port 80 inside the Docker network.
    # We will map this to a port on our host machine (e.g., 8080) in docker-compose.
    listen 80;

    # --- ROUTING RULE 1: The Write Path ---
    # Any request that comes to the path "/api/book" will be handled by this block.
    location /api/book {
      # CORS headers
      add_header 'Access-Control-Allow-Origin' '*' always;
      add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
      add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;

      # Handle preflight OPTIONS requests (set only extra headers here)
      if ($request_method = 'OPTIONS') {
        add_header 'Access-Control-Max-Age' 1728000;
        add_header 'Content-Type' 'text/plain; charset=utf-8';
        add_header 'Content-Length' 0;
        return 204;
      }
      
      # The magic happens here: proxy_pass forwards the request to our write_api_service upstream.
      # NGINX handles the network routing internally.
      proxy_pass http://write_api_service/api/book;

      # These headers are important for passing along information from the original request.
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
    }

    # --- ROUTING RULE 2: The Read Path ---
    # Any request starting with "/api/events" will be handled here.
    location /api/events {
      # CORS headers
      add_header 'Access-Control-Allow-Origin' '*' always;
      add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
      add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;

      # Handle preflight OPTIONS requests (set only extra headers here)
      if ($request_method = 'OPTIONS') {
        add_header 'Access-Control-Max-Age' 1728000;
        add_header 'Content-Type' 'text/plain; charset=utf-8';
        add_header 'Content-Length' 0;
        return 204;
      }
      
      # This forwards the request to our read_api_service.
      proxy_pass http://read_api_service/api/events;
      
      # Same headers as above.
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
    }
  }
}